#!/bin/bash

kill_nifi() {
  echo Killing NiFi...
  docker kill nifi
  docker rm nifi
}

create_volume() {
  docker volume create database_repository || echo "'database_repository' volume already created"
  docker volume create provenance_repository || echo "'provenance_repository' volume already created"
  docker volume create flowfile_repository || echo "'flowfile_repository' volume already created"
  docker volume create content_repository || echo "'content_repository' volume already created"
  docker volume create --driver local --name data --opt type=none --opt device=`pwd`/data --opt o=bind || echo "'data' volume already created"
}

start_nifi() {
  mkdir -m 777 -p $HOME/data
  docker run -d \
    --restart always \
    --name nifi \
    --env NIFI_JMX_PORT=5555 \
    --env NIFI_WEB_HTTP_PORT=8080 \
    --env NIFI_JVM_HEAP_INIT="${nifi_jvm_xms}" \
    --env NIFI_JVM_HEAP_MAX="${nifi_jvm_xmx}" \
    -v 'database_repository:/opt/nifi/nifi-current/database_repository' \
    -v 'provenance_repository:/opt/nifi/nifi-current/provenance_repository' \
    -v 'flowfile_repository:/opt/nifi/nifi-current/flowfile_repository' \
    -v 'content_repository:/opt/nifi/nifi-current/content_repository' \
    -v "data:/opt/nifi/nifi-current/data" \
    -p ${port}:8080 \
    "${docker_image}"
}

docker_login(){
  if [ -n "${docker_username}" ] || [ -n "${docker_password}" ] || [ -n "${docker_registry}" ]; then
    docker login -u ${docker_username} -p ${docker_password} ${docker_registry}
  fi
}

kill_nifi
create_volume
docker_login
start_nifi
